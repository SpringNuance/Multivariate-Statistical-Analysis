# Check the size of the data matrix
dim(DATA)
# Check the size of the data matrix
dim(DATA)
# Check the size of the data matrix
dim(DATA)
colnames(DATA)
# Remove total points, height and weight from the analysis
DEC <- DATA[,-c(1,12,13)]
help("princomp")
# Visualize the data
plot(DEC) # Note that since DEC is of the type data.frame R automatically uses the function pairs to plot the variables
# Use plot(as.matrix(DEC)) the see the difference
# More related to different data types in the course Introduction to R-programming
pairs(DEC)
# A way to plot two specific variables with the names of the athletes:
plot(DEC$R100m,DEC$R400m,xlab="Running 100m",ylab="Running 400m",type="n")
text(DEC$R100m,DEC$R400m,labels=rownames(DEC))
DEC.PCA <- princomp(DEC,cor=FALSE)
DEC.PCA <- princomp(DEC,cor=FALSE)
DEC.PCA <- princomp(DEC,cor=FALSE)
DATA <- read.table("data/decathlon.txt",header=TRUE,sep="\t",row.names=1)
# Nice way to check that the upload was succesful
head(DATA)
View(DATA)
# Check the size of the data matrix
dim(DATA)
colnames(DATA)
# Remove total points, height and weight from the analysis
DEC <- DATA[,-c(1,12,13)]
help("princomp")
# Visualize the data
plot(DEC) # Note that since DEC is of the type data.frame R automatically uses the function pairs to plot the variables
# Use plot(as.matrix(DEC)) the see the difference
# More related to different data types in the course Introduction to R-programming
pairs(DEC)
# Visualize the data
plot(DEC) # Note that since DEC is of the type data.frame R automatically uses the function pairs to plot the variables
# Use plot(as.matrix(DEC)) the see the difference
# More related to different data types in the course Introduction to R-programming
pairs(DEC)
?pairs
# Use plot(as.matrix(DEC)) the see the difference
plot(as.matrix(DEC))
# More related to different data types in the course Introduction to R-programming
pairs(DEC)
# Use plot(as.matrix(DEC)) the see the difference
plot(as.matrix(DEC))
# A way to plot two specific variables with the names of the athletes:
plot(DEC$R100m,DEC$R400m,xlab="Running 100m",ylab="Running 400m",type="n")
text(DEC$R100m,DEC$R400m,labels=rownames(DEC))
?rownames
# Nice way to check that the upload was succesful
head(DATA)
# A way to plot two specific variables with the names of the athletes:
plot(DEC$R100m,DEC$R400m,xlab="Running 100m",ylab="Running 400m",type="n")
DEC.PCA <- princomp(DEC,cor=FALSE)
# Nice way to check that the upload was succesful
head(DATA)
names(DEC.PCA)
summary(DEC.PCA)
library("ggplot2")
library("mvtnorm")
# Set parameters for bivariate normal distribution
mu <- c(4, 7)
sigma <- matrix(c(10, 6, 6, 8), nrow = 2, ncol = 2)
# Simulate 100 observations
set.seed(123)
data <- rmvnorm(n = 100, mean = mu, sigma = sigma)
# Plot data and label points with observation number
library(ggplot2)
ggplot(data.frame(data), aes(x = X1, y = X2)) +
geom_point(aes(label = 1:100)) +
ggtitle("Bivariate Normal Distribution") +
xlab("X1") + ylab("X2")
# Set parameters for bivariate normal distribution
mu <- c(4, 7)
sigma <- matrix(c(10, 6, 6, 8), nrow = 2, ncol = 2)
# Simulate 100 observations
set.seed(123)
nultinormData <- rmvnorm(n = 100, mean = mu, sigma = sigma)
# Plot data and label points with observation number
library(ggplot2)
ggplot(data.frame(multinormData), aes(x = X1, y = X2)) +
geom_point(aes(label = 1:100)) + +geom_text(hjust=0, vjust=0)
# Set parameters for bivariate normal distribution
mu <- c(4, 7)
sigma <- matrix(c(10, 6, 6, 8), nrow = 2, ncol = 2)
# Simulate 100 observations
set.seed(123)
multinormData <- rmvnorm(n = 100, mean = mu, sigma = sigma)
# Plot data and label points with observation number
library(ggplot2)
ggplot(data.frame(multinormData), aes(x = X1, y = X2)) +
geom_point(aes(label = 1:100)) + +geom_text(hjust=0, vjust=0)
# Set parameters for bivariate normal distribution
mu <- c(4, 7)
sigma <- matrix(c(10, 6, 6, 8), nrow = 2, ncol = 2)
# Simulate 100 observations
set.seed(123)
multinormData <- rmvnorm(n = 100, mean = mu, sigma = sigma)
# Plot data and label points with observation number
library(ggplot2)
ggplot(data.frame(multinormData), aes(x = X1, y = X2)) +
geom_point(aes(label = 1:100)) + geom_text(hjust=0, vjust=0) +
ggtitle("Bivariate Normal Distribution") +
xlab("X1") + ylab("X2")
# Set parameters for bivariate normal distribution
mu <- c(4, 7)
sigma <- matrix(c(10, 6, 6, 8), nrow = 2, ncol = 2)
# Simulate 100 observations
set.seed(123)
multinormData <- rmvnorm(n = 100, mean = mu, sigma = sigma)
# Plot data and label points with observation number
library(ggplot2)
ggplot(data.frame(multinormData), aes(x = X1, y = X2)) +
geom_point(aes(label = 1:100)) + geom_text(hjust=0, vjust=0, label = 1:100) +
ggtitle("Bivariate Normal Distribution") +
xlab("X1") + ylab("X2")
# Set parameters for bivariate normal distribution
mu <- c(4, 7)
sigma <- matrix(c(10, 6, 6, 8), nrow = 2, ncol = 2)
# Simulate 100 observations
set.seed(123)
multinormData <- rmvnorm(n = 100, mean = mu, sigma = sigma)
# Plot data and label points with observation number
library(ggplot2)
ggplot(data.frame(multinormData), aes(x = X1, y = X2)) +
geom_point() + geom_text(hjust=0, vjust=0, label = 1:100) +
ggtitle("Bivariate Normal Distribution") +
xlab("X1") + ylab("X2")
# Set parameters for the bivariate normal distribution
mu <- c(4, 7)
sigma <- matrix(c(10, 6, 6, 8), nrow = 2, ncol = 2)
# Simulate 100 observations
set.seed(123)
multinormData <- rmvnorm(n = 100, mean = mu, sigma = sigma)
# Plot data and label points with observation number
library(ggplot2)
ggplot(data.frame(multinormData), aes(x = X1, y = X2)) +
geom_point() + geom_text(hjust=0, vjust=0, label = 1:100) +
ggtitle("Simulation of 100 datapoints from the bivariate normal distribution") +
xlab("X") + ylab("Y")
?geom_text
# Set parameters for the bivariate normal distribution
mu <- c(4, 7)
sigma <- matrix(c(10, 6, 6, 8), nrow = 2, ncol = 2)
# Simulate 100 observations
set.seed(123)
multinormData <- rmvnorm(n = 100, mean = mu, sigma = sigma)
# Plot data and label points with observation number
library(ggplot2)
ggplot(data.frame(multinormData), aes(x = X1, y = X2)) +
geom_point() + geom_text(hjust=0, vjust=0, label = 1:100, font=12) +
ggtitle("Simulation of 100 datapoints from the bivariate normal distribution") +
xlab("X") + ylab("Y")
# Set parameters for the bivariate normal distribution
mu <- c(4, 7)
sigma <- matrix(c(10, 6, 6, 8), nrow = 2, ncol = 2)
# Simulate 100 observations
set.seed(123)
multinormData <- rmvnorm(n = 100, mean = mu, sigma = sigma)
# Plot data and label points with observation number
library(ggplot2)
ggplot(data.frame(multinormData), aes(x = X1, y = X2)) +
geom_point() + geom_text(hjust=0, vjust=0, label = 1:100, size=12) +
ggtitle("Simulation of 100 datapoints from the bivariate normal distribution") +
xlab("X") + ylab("Y")
# Set parameters for the bivariate normal distribution
mu <- c(4, 7)
sigma <- matrix(c(10, 6, 6, 8), nrow = 2, ncol = 2)
# Simulate 100 observations
set.seed(123)
multinormData <- rmvnorm(n = 100, mean = mu, sigma = sigma)
# Plot data and label points with observation number
library(ggplot2)
ggplot(data.frame(multinormData), aes(x = X1, y = X2)) +
geom_point() + geom_text(hjust=0, vjust=0, label = 1:100, size=1) +
ggtitle("Simulation of 100 datapoints from the bivariate normal distribution") +
xlab("X") + ylab("Y")
# Set parameters for the bivariate normal distribution
mu <- c(4, 7)
sigma <- matrix(c(10, 6, 6, 8), nrow = 2, ncol = 2)
# Simulate 100 observations
set.seed(123)
multinormData <- rmvnorm(n = 100, mean = mu, sigma = sigma)
# Plot data and label points with observation number
library(ggplot2)
ggplot(data.frame(multinormData), aes(x = X1, y = X2)) +
geom_point() + geom_text(hjust=0, vjust=0, label = 1:100, size=3) +
ggtitle("Simulation of 100 datapoints from the bivariate normal distribution") +
xlab("X") + ylab("Y")
# Set parameters for the bivariate normal distribution
mu <- c(4, 7)
sigma <- matrix(c(10, 6, 6, 8), nrow = 2, ncol = 2)
# Simulate 100 observations
set.seed(123)
multinormData <- rmvnorm(n = 100, mean = mu, sigma = sigma)
# Plot data and label points with observation number
library(ggplot2)
ggplot(data.frame(multinormData), aes(x = X1, y = X2)) +
geom_point() + geom_text(hjust=1, vjust=1, label = 1:100, size=3) +
ggtitle("Simulation of 100 datapoints from the bivariate normal distribution") +
xlab("X") + ylab("Y")
# Set parameters for the bivariate normal distribution
mu <- c(4, 7)
sigma <- matrix(c(10, 6, 6, 8), nrow = 2, ncol = 2)
# Simulate 100 observations
set.seed(123)
multinormData <- rmvnorm(n = 100, mean = mu, sigma = sigma)
# Plot data and label points with observation number
library(ggplot2)
ggplot(data.frame(multinormData), aes(x = X1, y = X2)) +
geom_point() + geom_text(hjust=-1, vjust=-1, label = 1:100, size=3) +
ggtitle("Simulation of 100 datapoints from the bivariate normal distribution") +
xlab("X") + ylab("Y")
# Set parameters for the bivariate normal distribution
mu <- c(4, 7)
sigma <- matrix(c(10, 6, 6, 8), nrow = 2, ncol = 2)
# Simulate 100 observations
set.seed(123)
multinormData <- rmvnorm(n = 100, mean = mu, sigma = sigma)
# Plot data and label points with observation number
library(ggplot2)
ggplot(data.frame(multinormData), aes(x = X1, y = X2)) +
geom_point() + geom_text(hjust=-0.5, vjust=-0.5, label = 1:100, size=3) +
ggtitle("Simulation of 100 datapoints from the bivariate normal distribution") +
xlab("X") + ylab("Y")
# Set parameters for the bivariate normal distribution
mu <- c(4, 7)
sigma <- matrix(c(10, 6, 6, 8), nrow = 2, ncol = 2)
# Simulate 100 observations
set.seed(123)
multinormData <- rmvnorm(n = 100, mean = mu, sigma = sigma)
# Plot data and label points with observation number
library(ggplot2)
ggplot(data.frame(multinormData), aes(x = X1, y = X2)) +
geom_point() + geom_text(hjust=-0.5, vjust= 0, label = 1:100, size=3) +
ggtitle("Simulation of 100 datapoints from the bivariate normal distribution") +
xlab("X") + ylab("Y")
# Set parameters for the bivariate normal distribution
mu <- c(4, 7)
sigma <- matrix(c(10, 6, 6, 8), nrow = 2, ncol = 2)
# Simulate 100 observations
set.seed(123)
multinormData <- rmvnorm(n = 100, mean = mu, sigma = sigma)
# Plot data and label points with observation number
library(ggplot2)
ggplot(data.frame(multinormData), aes(x = X1, y = X2)) +
geom_point() + geom_text(hjust= 0, vjust=-0.5, label = 1:100, size=3) +
ggtitle("Simulation of 100 datapoints from the bivariate normal distribution") +
xlab("X") + ylab("Y")
# Set parameters for the bivariate normal distribution
mu <- c(4, 7)
sigma <- matrix(c(10, 6, 6, 8), nrow = 2, ncol = 2)
# Simulate 100 observations
set.seed(123)
multinormData <- rmvnorm(n = 100, mean = mu, sigma = sigma)
# Plot data and label points with observation number
library(ggplot2)
ggplot(data.frame(multinormData), aes(x = X1, y = X2)) +
geom_point() + geom_text(hjust= 0.5, vjust=-0.5, label = 1:100, size=3) +
ggtitle("Simulation of 100 datapoints from the bivariate normal distribution") +
xlab("X") + ylab("Y")
library("ggplot2")
library("mvtnorm")
# Set parameters for the bivariate normal distribution
mu <- c(4, 7)
sigma <- matrix(c(10, 6, 6, 8), nrow = 2, ncol = 2)
# Simulate 100 observations
set.seed(123)
multinormData <- data.frame(rmvnorm(n = 100, mean = mu, sigma = sigma))
# Plot data and label points with observation number
library(ggplot2)
ggplot(multinormData, aes(x = X1, y = X2)) +
geom_point() + geom_text(hjust= 0.5, vjust=-0.5, label = 1:100, size=3) +
ggtitle("Simulation of 100 datapoints from the bivariate normal distribution") +
xlab("X") + ylab("Y")
DEC.PCA <- princomp(DEC,cor=FALSE)
names(DEC.PCA)
multiNorm.PCA <- princomp(multiNorm,cor=FALSE)
multinormData.PCA <- princomp(multinormData,cor=FALSE)
names(multinormData.PCA)
multinormData.PCA <- princomp(multinormData,cor=FALSE)
names(multinormData.PCA)
multinormData.PCA <- princomp(multinormData,cor=FALSE)
names(multinormData.PCA)
plot(multinormData.PCA)
multinormData.PCA <- princomp(multinormData,cor=FALSE)
names(multinormData.PCA)
multinormData.PCA
multinormData.PCA <- princomp(multinormData,cor=FALSE)
names(multinormData.PCA)
multinormData.PCA$sdev
multinormData.PCA <- princomp(multinormData,cor=FALSE)
# names(multinormData.PCA)
multinormData.PCA$sdev
multinormData.PCA <- princomp(multinormData,cor=FALSE)
# names(multinormData.PCA)
multinormData.PCA
multinormData.PCA <- princomp(multinormData,cor=FALSE)
# names(multinormData.PCA)
multinormData.PCA$center
# Set parameters for the bivariate normal distribution
mu <- c(4, 7)
sigma <- matrix(c(10, 6, 6, 8), nrow = 2, ncol = 2)
# Simulate 100 observations
set.seed(123)
multinormData <- data.frame(rmvnorm(n = 100, mean = mu, sigma = sigma))
# Plot data and label points with observation number
library(ggplot2)
ggplot(multinormData, aes(x = X1, y = X2)) +
geom_point() + geom_text(hjust= 0.5, vjust=-0.5, label = 1:100, size=3) +
ggtitle("Simulation of 100 datapoints from the bivariate normal distribution") +
xlab("X1") + ylab("X2")
multinormData.PCA <- princomp(multinormData,cor=FALSE)
# names(multinormData.PCA)
multinormData.PCA$sdev
multinormData.PCA$loadings
multinormData.PCA$center
multinormData.PCA$scale
multinormData.PCA$n.obs
multinormData.PCA$scores
multinormData.PCA$calls
multinormData.PCA <- princomp(multinormData,cor=FALSE)
# names(multinormData.PCA)
print("sdev")
multinormData.PCA$sdev
print("loadings")
multinormData.PCA$loadings
multinormData.PCA$center
multinormData.PCA$scale
print("number of observations")
multinormData.PCA$n.obs
print("Matrix Y")
multinormData.PCA$scores
multinormData.PCA$calls
multinormData.PCA <- princomp(multinormData,cor=FALSE)
# names(multinormData.PCA)
print("\nsdev")
multinormData.PCA$sdev
print("\nloadings")
multinormData.PCA$loadings
multinormData.PCA$center
print("\nRelevant when cor=TRUE")
multinormData.PCA$scale
print("\nnumber of observations")
multinormData.PCA$n.obs
print("\nMatrix Y")
multinormData.PCA$scores
print("\nfunction input")
multinormData.PCA$calls
multinormData.PCA <- princomp(multinormData,cor=FALSE)
# names(multinormData.PCA)
cat("\nsdev")
multinormData.PCA$sdev
cat("\nloadings")
multinormData.PCA$loadings
multinormData.PCA$center
cat("\nRelevant when cor=TRUE")
multinormData.PCA$scale
print("\nnumber of observations")
multinormData.PCA$n.obs
print("\nMatrix Y")
multinormData.PCA$scores
print("\nfunction input")
multinormData.PCA$calls
multinormData.PCA <- princomp(multinormData,cor=FALSE)
# names(multinormData.PCA)
cat("sdev")
multinormData.PCA$sdev
cat("\nloadings")
multinormData.PCA$loadings
multinormData.PCA$center
cat("\nRelevant when cor=TRUE")
multinormData.PCA$scale
print("\nnumber of observations")
multinormData.PCA$n.obs
print("\nMatrix Y")
multinormData.PCA$scores
print("\nfunction input")
multinormData.PCA$calls
multinormData.PCA <- princomp(multinormData,cor=FALSE)
# names(multinormData.PCA)
cat("sdev")
multinormData.PCA$sdev
cat("\nThe G matrix) (columns are eigenvectors)")
multinormData.PCA$loadings
cat("\nThe Y matrix")
multinormData.PCA$scores
cat("The sample mean")
multinormData.PCA$center
cat("\nRelevant when cor=TRUE")
multinormData.PCA$scale
cat("\nnumber of observations")
multinormData.PCA$n.obs
cat("\nfunction input")
multinormData.PCA$calls
multinormData.PCA <- princomp(multinormData,cor=FALSE)
# names(multinormData.PCA)
cat("sdev")
multinormData.PCA$sdev
cat("\nThe G matrix) (columns are eigenvectors)")
multinormData.PCA$loadings
cat("\nThe Y matrix")
multinormData.PCA$scores
cat("The sample mean")
multinormData.PCA$center
cat("\nRelevant when cor=TRUE")
multinormData.PCA$scale
cat("\nnumber of observations")
multinormData.PCA$n.obs
cat("\nfunction input")
multinormData.PCA$calls
multinormData.PCA <- princomp(multinormData,cor=FALSE)
# names(multinormData.PCA)
cat("sdev")
multinormData.PCA$sdev
cat("\nThe G matrix (columns are eigenvectors)")
multinormData.PCA$loadings
cat("\nThe Y matrix")
multinormData.PCA$scores
cat("The sample mean")
multinormData.PCA$center
cat("\nRelevant when cor=TRUE")
multinormData.PCA$scale
cat("\nnumber of observations")
multinormData.PCA$n.obs
cat("\nfunction input")
multinormData.PCA$calls
multinormData.PCA <- princomp(multinormData,cor=FALSE)
# names(multinormData.PCA)
cat("sdev\n")
multinormData.PCA$sdev
cat("\nThe G matrix (columns are eigenvectors)")
multinormData.PCA$loadings
cat("\nThe Y matrix")
multinormData.PCA$scores
cat("The sample mean")
multinormData.PCA$center
cat("\nRelevant when cor=TRUE")
multinormData.PCA$scale
cat("\nnumber of observations")
multinormData.PCA$n.obs
cat("\nfunction input")
multinormData.PCA$calls
multinormData.PCA <- princomp(multinormData,cor=FALSE)
# names(multinormData.PCA)
cat("sdev\n")
multinormData.PCA$sdev
cat("\nThe G matrix (columns are eigenvectors)")
multinormData.PCA$loadings
cat("\nThe Y matrix\n")
multinormData.PCA$scores
cat("The sample mean")
multinormData.PCA$center
cat("\nRelevant when cor=TRUE")
multinormData.PCA$scale
cat("\nnumber of observations")
multinormData.PCA$n.obs
cat("\nfunction input")
multinormData.PCA$calls
multinormData.PCA <- princomp(multinormData,cor=FALSE)
# names(multinormData.PCA)
cat("sdev\n")
multinormData.PCA$sdev
cat("\nThe G matrix (columns are eigenvectors)")
multinormData.PCA$loadings
cat("\nThe Y matrix\n")
multinormData.PCA$scores
cat("\nThe sample mean\n")
multinormData.PCA$center
cat("\nRelevant when cor=TRUE")
multinormData.PCA$scale
cat("\nnumber of observations")
multinormData.PCA$n.obs
cat("\nfunction input")
multinormData.PCA$calls
multinormData.PCA <- princomp(multinormData,cor=FALSE)
# names(multinormData.PCA)
cat("sdev\n")
multinormData.PCA$sdev
cat("\nThe G matrix (columns are eigenvectors)")
multinormData.PCA$loadings
cat("\nThe Y matrix\n")
multinormData.PCA$scores
cat("\nThe sample mean\n")
multinormData.PCA$center
cat("\nRelevant when cor=TRUE\n")
multinormData.PCA$scale
cat("\nnumber of observations\n")
multinormData.PCA$n.obs
cat("\nfunction input\n")
multinormData.PCA$calls
plot(multinormData.PCA$scores)
plot(multinormData.PCA$scores)
library(ggplot2)
ggplot(multinormData.PCA$scores, aes(x = Comp.1, y = Comp.2)) +
geom_point() + geom_text(hjust= 0.5, vjust=-0.5, label = 1:100, size=3) +
ggtitle("Score matrix points") +
xlab("X1") + ylab("X2")
plot(multinormData.PCA$scores)
library(ggplot2)
ggplot(data.frame(multinormData.PCA$scores), aes(x = Comp.1, y = Comp.2)) +
geom_point() + geom_text(hjust= 0.5, vjust=-0.5, label = 1:100, size=3) +
ggtitle("Score matrix points") +
xlab("X1") + ylab("X2")
library(ggplot2)
ggplot(data.frame(multinormData.PCA$scores), aes(x = Comp.1, y = Comp.2)) +
geom_point() + geom_text(hjust= 0.5, vjust=-0.5, label = 1:100, size=3) +
ggtitle("Score matrix points") +
xlab("Component 1") + ylab("Component 2")
